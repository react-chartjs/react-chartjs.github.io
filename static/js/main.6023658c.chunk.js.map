{"version":3,"sources":["components/Pie/pie.m.scss","components/Line/index.tsx","../../src/index.ts","index.tsx","serviceWorker.js","components/Home/index.tsx","components/Nav/index.tsx","components/Header/index.tsx","components/Main/index.tsx","components/Pie/index.tsx","../../src/Chart.tsx"],"names":["module","exports","pie","React","__webpack_require__","core_1","Line","Component","[object Object]","props","super","this","state","conf","width","data","labels","datasets","label","backgroundColor","borderColor","fill","randomScalingFactor","options","responsive","title","display","text","scales","xAxes","yAxes","type","Math","ceil","random","pow","createElement","LineChart","Object","assign","__export","react_dom_1","serviceWorker","router_1","Home_1","render","Router","Home","path","document","getElementById","unregister","r","__webpack_exports__","d","register","isLocalhost","Boolean","window","location","hostname","match","config","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","then","response","status","headers","get","indexOf","ready","registration","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","Nav_1","classnames_1","Header_1","Main_1","top_app_bar_1","drawer_1","Pie_1","Line_1","PureComponent","drawer","MDCDrawer","attachTo","open","topAppBar","MDCTopAppBar","setScrollTarget","listen","destroy","Nav","className","default","Header","Main","Pie","id","Link","to","aria-selected","aria-hidden","href","children","dist_1","css","randomize","bind","add","remove","chartColors","red","orange","yellow","green","blue","purple","grey","colorNames","keys","legend","position","round","$event","setState","forEach","dataset","map","newDataset","Array","length","index","push","colorName","newColor","splice","onClick","PieChart","chart_js_1","ReactChart","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","ref","createRef","nextProps","chart","update","Chart","current","getContext","_props","name","hasOwnProperty"],"mappings":"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","file":"static/js/main.6023658c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pie\":\"pie.m_pie__1NEGo\"};","import * as React from 'react';\nimport { LineChart, ReactChart } from '@react-chartjs/core';\nimport { RouteComponentProps } from '@reach/router';\n\nexport class Line extends React.Component<RouteComponentProps, { conf: any }> {\n\n  constructor(props: RouteComponentProps) {\n    super(props);\n\n    this.state = {\n      conf: {\n        width: '100%',\n        data: {\n          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n          datasets: [{\n            label: 'My First dataset',\n            backgroundColor: 'rgb(255, 99, 132',\n            borderColor: 'rgb(255, 159, 64)',\n            fill: false,\n            data: [\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor()\n            ]\n          }, {\n            label: 'My Second dataset',\n            backgroundColor: 'rgb(255, 205, 86)',\n            borderColor: 'rgb(75, 192, 192)',\n            fill: false,\n            data: [\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor(),\n              Line.randomScalingFactor()\n            ]\n          }]\n        },\n        options: {\n          responsive: true,\n          title: {\n            display: true,\n            text: 'Chart.js Line Chart - Logarithmic'\n          },\n          scales: {\n            xAxes: [{\n              display: true\n            }],\n            yAxes: [{\n              display: true,\n              type: 'logarithmic'\n            }]\n          }\n        }\n      }\n    };\n  }\n\n  static randomScalingFactor() {\n    return Math.ceil(Math.random() * 10.0) * Math.pow(10, Math.ceil(Math.random() * 5));\n  };\n\n  render(): React.ReactNode {\n    return <LineChart type={'line'} {...this.state.conf}/>;\n  }\n}\n","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./Chart\"));\r\n//# sourceMappingURL=index.js.map","import * as React from 'react';\nimport { render } from 'react-dom';\nimport 'reset.css/reset.css';\nimport 'normalize.css/normalize.css';\nimport './index.scss';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Router } from '@reach/router';\nimport { Home } from './components/Home';\n\n\nrender(<Router>\n  <Home path=\"/*\"/>\n</Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n  ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport { Nav } from '../Nav';\nimport { RouteComponentProps, Router } from '@reach/router';\nimport classNames from 'classnames';\nimport { Header } from '../Header';\nimport { Main } from '../Main';\nimport { MDCTopAppBar } from '@material/top-app-bar';\n// @ts-ignore\nimport { MDCDrawer } from '@material/drawer';\nimport { Pie } from '../Pie';\nimport { Line } from '../Line';\n\nexport class Home extends React.PureComponent<RouteComponentProps> {\n  private topAppBar: MDCTopAppBar;\n  private drawer: MDCDrawer;\n\n  componentDidMount(): void {\n    this.drawer = MDCDrawer.attachTo(document.getElementById('mdc-drawer'));\n    this.drawer.open = true;\n    this.topAppBar = MDCTopAppBar.attachTo(document.getElementById('app-bar') as Element);\n    // @ts-ignore\n    this.topAppBar.setScrollTarget(document.getElementById('main-content'));\n    this.topAppBar.listen('MDCTopAppBar:nav', () => {\n      this.drawer.open = !this.drawer.open;\n    });\n  }\n\n  componentWillUnmount(): void {\n    this.topAppBar.destroy();\n  }\n\n  render(): React.ReactNode {\n    return <div>\n      <Nav/>\n      <div className={classNames('mdc-drawer-app-content')}>\n        <Header/>\n        <Main>\n          <Router>\n            <Pie path=\"/\"/>\n            <Pie path=\"pie\"/>\n            <Line path=\"line\"/>\n          </Router>\n        </Main>\n      </div>\n    </div>;\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Link } from '@reach/router';\nimport './Nav.scss';\n\nexport class Nav extends React.PureComponent {\n  render(): React.ReactNode {\n    return <aside id=\"mdc-drawer\" className={classNames('mdc-drawer', 'mdc-drawer--dismissible')}>\n      <div className=\"mdc-drawer__content\">\n        <nav className=\"mdc-list\">\n          <Link className={classNames('mdc-list-item', 'mdc-list-item--activated')} to=\"pie\" aria-selected=\"true\">\n            <i className={classNames('material-icons', 'mdc-list-item__graphic')} aria-hidden=\"true\">pie_chart</i>\n            <span className=\"mdc-list-item__text\">Pie</span>\n          </Link>\n          <Link className=\"mdc-list-item\" to=\"line\">\n            <i className={classNames('material-icons', 'mdc-list-item__graphic')} aria-hidden=\"true\">multiline_chart</i>\n            <span className=\"mdc-list-item__text\">Line</span>\n          </Link>\n          <Link className=\"mdc-list-item\" to=\"#\">\n            <i className={classNames('material-icons', 'mdc-list-item__graphic')} aria-hidden=\"true\">drafts</i>\n            <span className=\"mdc-list-item__text\">Drafts</span>\n          </Link>\n        </nav>\n      </div>\n    </aside>;\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport './Header.scss';\n\nexport class Header extends React.PureComponent {\n  constructor(props: any) {\n    super(props);\n  }\n\n  render(): React.ReactNode {\n\n    return <header id=\"app-bar\" className={classNames('mdc-top-app-bar', 'app-bar')}>\n      <div className={classNames('mdc-top-app-bar__row')}>\n        <section className={classNames('mdc-top-app-bar__section', 'mdc-top-app-bar__section--align-start')}>\n          <a href=\"#\" className={classNames('material-icons', 'mdc-top-app-bar__navigation-icon')}>menu</a>\n          <span className={classNames('mdc-top-app-bar__title')}>react-chartjs</span>\n        </section>\n      </div>\n    </header>;\n  }\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport './Main.scss';\n\nexport class Main extends React.PureComponent {\n  render(): React.ReactNode {\n    return <main id=\"main-content\" className={classNames('main-content')}>\n      <div className={classNames('mdc-top-app-bar--fixed-adjust')}>\n        {this.props.children}\n      </div>\n    </main>;\n  }\n}\n","import * as React from 'react';\nimport { MouseEvent } from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { PieChart } from '@react-chartjs/core/dist';\nimport * as css from './pie.m.scss';\n\nexport class Pie extends React.Component<RouteComponentProps, { pie: any }> {\n  readonly chartColors: any;\n  readonly colorNames: any;\n\n  constructor(props: any) {\n    super(props);\n    this.randomize = this.randomize.bind(this);\n    this.add = this.add.bind(this);\n    this.remove = this.remove.bind(this);\n    this.chartColors = {\n      red: 'rgb(255, 99, 132)',\n      orange: 'rgb(255, 159, 64)',\n      yellow: 'rgb(255, 205, 86)',\n      green: 'rgb(75, 192, 192)',\n      blue: 'rgb(54, 162, 235)',\n      purple: 'rgb(153, 102, 255)',\n      grey: 'rgb(201, 203, 207)',\n    };\n    this.colorNames = Object.keys(this.chartColors);\n    this.state = {\n      pie: {\n        width: '100%',\n        data: {\n          datasets: [{\n            data: [\n              Pie.randomScalingFactor(),\n              Pie.randomScalingFactor(),\n              Pie.randomScalingFactor(),\n              Pie.randomScalingFactor(),\n              Pie.randomScalingFactor(),\n            ],\n            backgroundColor: [\n              'rgb(255, 99, 132)',\n              'rgb(255, 159, 64)',\n              'rgb(255, 205, 86)',\n              'rgb(75, 192, 192)',\n              'rgb(54, 162, 235)',\n            ],\n            label: 'Dataset 1',\n          }],\n          labels: [\n            'Red',\n            'Orange',\n            'Yellow',\n            'Green',\n            'Blue',\n          ],\n        },\n        options: {\n          responsive: true,\n          legend: {\n            display: true,\n            position: 'top',\n          },\n        },\n      },\n    };\n  }\n\n  static randomScalingFactor(): number {\n    return Math.round(Math.random() * 100);\n  };\n\n  randomize($event: MouseEvent<HTMLButtonElement>): void {\n    this.setState(state => {\n      state.pie.data.datasets.forEach((dataset: any) => {\n        dataset.data = dataset.data.map(() => Pie.randomScalingFactor());\n      });\n      return state;\n    });\n  }\n\n  add($event: MouseEvent<HTMLButtonElement>): void {\n    let newDataset = {\n      backgroundColor: new Array<string>(),\n      data: new Array<number>(),\n      label: `New dataset ${this.state.pie.data.datasets.length}`,\n    };\n    for (let index = 0; index < this.state.pie.data.labels.length; ++index) {\n      newDataset.data.push(Pie.randomScalingFactor());\n\n      let colorName = this.colorNames[index % this.colorNames.length];\n      let newColor = this.chartColors[colorName];\n      newDataset.backgroundColor.push(newColor);\n    }\n\n    this.setState(state => state.pie.data.datasets.push(newDataset));\n  }\n\n  remove($event: MouseEvent<HTMLButtonElement>): void {\n    this.setState(state => state.pie.data.datasets.splice(0, 1));\n  }\n\n  render(): React.ReactNode {\n    return <div className={css['pie']}>\n      <button onClick={this.randomize}>Randomize Data</button>\n      <button onClick={this.add}>Add Data Set</button>\n      <button onClick={this.remove}>Remove Data Set</button>\n      <PieChart {...this.state.pie}/>\n    </div>;\n  }\n}\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst chart_js_1 = require(\"chart.js\");\r\nclass ReactChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ref = React.createRef();\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.chart.update();\r\n    }\r\n    componentDidMount() {\r\n        this.chart = new chart_js_1.Chart(this.ref.current.getContext('2d'), {\r\n            type: this.props.type,\r\n            data: this.props.data,\r\n            options: this.props.options,\r\n        });\r\n    }\r\n    componentWillUnmount() {\r\n        this.chart.destroy();\r\n    }\r\n    render() {\r\n        let _props = {};\r\n        for (let name in this.props) {\r\n            if (this.props.hasOwnProperty(name)) {\r\n                // all properties which is not 'data', 'type' or 'options'\r\n                if (['data', 'options', 'type'].indexOf(name) === -1) {\r\n                    _props[name] = this.props[name];\r\n                }\r\n            }\r\n        }\r\n        return React.createElement(\"canvas\", Object.assign({ ref: this.ref }, _props));\r\n    }\r\n}\r\nexports.ReactChart = ReactChart;\r\n//     type ChartType = 'line' | 'bar' | 'horizontalBar' | 'radar' | 'doughnut' | 'polarArea' | 'bubble' | 'pie';\r\nclass LineChart extends React.Component {\r\n    render() {\r\n        return React.createElement(ReactChart, { type: 'line', data: this.props.data, options: this.props.options });\r\n    }\r\n}\r\nexports.LineChart = LineChart;\r\nclass PieChart extends React.Component {\r\n    render() {\r\n        return React.createElement(ReactChart, Object.assign({ type: 'pie' }, this.props));\r\n    }\r\n}\r\nexports.PieChart = PieChart;\r\n// export class BarChart extends React.Component<ChartConfiguration> {\r\n//   render() {\r\n//     return <ReactChart type={'bar'} {...this.props}/>;\r\n//   }\r\n// }\r\n//# sourceMappingURL=Chart.js.map"],"sourceRoot":""}